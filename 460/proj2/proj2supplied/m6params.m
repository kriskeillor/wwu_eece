% This is the data generation script to be used
% for generating signals to be processed by an M6 Receiver.
%
% This example generates a test signal that's more difficult
% than "easy", but less difficult than "medium".

% Message Generation
m = char(zeros(3,11*100));
m(3,:)=['''Twas brillig, and the slithy toves '...
    'Did gyre and gimble in the wabe; '...
    'All mimsy were the borogoves, '...
    'And the mome raths outgrabe. '...
    '"Beware the Jabberwock, my son! '...
    'The jaws that bite, the claws that catch! '...
    'Beware the Jubjub bird, and shun '...
    'The frumious Bandersnatch!" '...
    'He took his vorpal sword in hand: '...
    'Long time the manxome foe he sought-- '...
    'So rested he by the Tumtum tree, '...
    'And stood awhile in thought. '...
    'And as in uffish thought he stood, '...
    'The Jabberwock, with eyes of flame, '...
    'Came whiffling through the tulgey wood, '...
    'And burbled as it came! '...
    'One, two! One, two! and through and through '...
    'The vorpal blade went snicker-snack! '...
    'He left it dead, and with its head '...
    'He went galumphing back. '...
    '"And hast thou slain the Jabberwock? '...
    'Come to my arms, my beamish boy! '...
    'O frabjous day! Callooh! Callay!" '...
    'He chortled in his joy. '...
    '''Twas brillig, and the slithy toves '...
    'Did gyre and gimble in the wabe; '...
    'All mimsy were the borogoves, '...
    'And the mome raths outgrabe. "Jabberwocky", '...
    'a poem by Lewis Carroll which appeared '...
    'in his 1872 novel Through the Looking-Glass, '...
    'and What Alice Found There, a sequel to Alice''s'...
    ' Adventures in Wonderland'];
m(1:2,:)=char(floor(rand(2,1100)*91)+32);
m(1,1:55)=['This is user 1''s data which is just junk from here on: '];
m(2,1:55)=['This is user 2''s data which is just junk from here on: '];

% Frame parameters
frameParams.userDataLength=100;
frameParams.preamble='A0Oh well whatever Nevermind';
frameParams.chanCodingFlag=1;
frameParams.bitEncodingFlag=1;

% Channel parameters, Adjacent Users, Interference
chanParams.c1=[0 -1 0];
chanParams.c2=[0 -1 0];
chanParams.randomWalkVariance=0;
chanParams.SNR=23;
chanParams.adjacentUser1Power=-Inf;
chanParams.adjacentUser1f_if=2e6-204e3;
chanParams.adjacentUser1Chan=[1 0 0];
chanParams.adjacentUser2Power=-Inf;
chanParams.adjacentUser2f_if=2e6+204e3;
chanParams.adjacentUser2Chan=[1 0 0];
chanParams.NBIfreq=1.9e6;
chanParams.NBIPower=-Inf;

% RF Parameters
rfParams.f_if_err=-0.004;
rfParams.T_t_err=-46/8039;
rfParams.phaseNoiseVariance=0;
rfParams.SRRCLength=4;
rfParams.SRRCrolloff=0.2;
rfParams.f_s=850e3;
rfParams.T_t=6.4e-6;
rfParams.f_if=2e6;

% call transmitter
[r s]=BigTransmitter(m, frameParams, rfParams, chanParams);

desired_user = 3;
rolloff = rfParams.SRRCrolloff;
save test_signal.mat desired_user m r rolloff

